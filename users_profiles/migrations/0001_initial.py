# Generated by Django 5.2.4 on 2025-08-19 18:10

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('profile_photo', models.ImageField(blank=True, null=True, upload_to='profile_photos/', verbose_name='Foto de Perfil')),
                ('phone_number', models.CharField(blank=True, max_length=17, null=True, validators=[django.core.validators.RegexValidator(message="El número de teléfono debe estar en formato: '+999999999'. Hasta 15 dígitos permitidos.", regex='^\\+?1?\\d{9,15}$')], verbose_name='Número de Teléfono')),
                ('email_verified', models.BooleanField(default=False, verbose_name='Email Verificado')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Fecha de Nacimiento')),
                ('country', models.CharField(blank=True, max_length=100, null=True, verbose_name='País')),
                ('city', models.CharField(blank=True, max_length=100, null=True, verbose_name='Ciudad')),
                ('website', models.URLField(blank=True, null=True, verbose_name='Sitio Web')),
                ('bio', models.TextField(blank=True, max_length=500, null=True, verbose_name='Biografía')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
                'db_table': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50, verbose_name='Nombre')),
                ('paternal_lastname', models.CharField(max_length=50, verbose_name='Apellido Paterno')),
                ('maternal_lastname', models.CharField(max_length=50, verbose_name='Apellido Materno')),
                ('gender', models.CharField(choices=[('M', 'Masculino'), ('F', 'Femenino'), ('O', 'Otro'), ('P', 'Prefiero no decir')], max_length=1, verbose_name='Género')),
                ('email', models.EmailField(max_length=254, verbose_name='Correo Electrónico')),
                ('is_public', models.BooleanField(default=True, verbose_name='Perfil Público')),
                ('show_email', models.BooleanField(default=False, verbose_name='Mostrar Email')),
                ('show_phone', models.BooleanField(default=False, verbose_name='Mostrar Teléfono')),
                ('receive_notifications', models.BooleanField(default=True, verbose_name='Recibir Notificaciones')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Fecha de Actualización')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
            ],
            options={
                'verbose_name': 'Perfil de Usuario',
                'verbose_name_plural': 'Perfiles de Usuario',
                'db_table': 'user_profiles',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='UserVerificationCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('verification_type', models.CharField(choices=[('email_change', 'Cambio de Email'), ('password_change', 'Cambio de Contraseña'), ('email_verification', 'Verificación de Email')], max_length=20, verbose_name='Tipo de Verificación')),
                ('code', models.CharField(max_length=6, verbose_name='Código de Verificación')),
                ('target_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email Objetivo')),
                ('is_used', models.BooleanField(default=False, verbose_name='Código Utilizado')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('expires_at', models.DateTimeField(verbose_name='Fecha de Expiración')),
                ('attempts', models.PositiveIntegerField(default=0, verbose_name='Intentos de Uso')),
                ('max_attempts', models.PositiveIntegerField(default=3, verbose_name='Máximo de Intentos')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='verification_codes', to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
            ],
            options={
                'verbose_name': 'Código de Verificación',
                'verbose_name_plural': 'Códigos de Verificación',
                'db_table': 'user_verification_codes',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', 'verification_type'], name='user_verifi_user_id_a6550f_idx'), models.Index(fields=['code', 'is_used'], name='user_verifi_code_556c26_idx')],
            },
        ),
    ]
